apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: application-stack
spec:
  compositeTypeRef:
    apiVersion: example.org/v1alpha1
    kind: XAppStack
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: sa
        base:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: app-account
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - type: CompineFromComposite
          combine:
            variables:
            - fromFieldPath: metadata.name
            strategy: string
            string:
              fmt: "%s-sa"
            toFieldPath: metadata.annotations.test
#          ---
#          apiVersion: apps/v1
#          kind: Deployment
#          metadata:
#            name: go-app
#            namespace: asodemo
#            labels:
#              app: go-app
#          spec:
#            replicas: 1
#            selector:
#              matchLabels:
#                app.kubernetes.io/name: go-app
#            template:
#              metadata:
#                labels:
#                  app.kubernetes.io/name: go-app
#                #annotations:
#                  # Azure Workload Identity annotations
#                  #azure.workload.identity/client-id: "<clientId-of-UMI>"
#              spec:
#                serviceAccountName: go-app
#                containers:
#                  - name: go-app
#                    image: ghcr.io/toddnni/toddnni/pe-automation-demo-2024:latest
#                    ports:
#                      - containerPort: 8080
#                    env:
#                      - name: DB_TYPE
#                        value: "postgres"
#                      - name: DB_HOST
#                        valueFrom:
#                          secretKeyRef:
#                            name: postgres-secret
#                            key: SERVER
#                      - name: DB_PORT
#                        valueFrom:
#                          secretKeyRef:
#                            name: postgres-secret
#                            key: PORT
#                      - name: DB_NAME
#                        valueFrom:
#                          secretKeyRef:
#                            name: postgres-secret
#                            key: DATABASE
#                      - name: DB_USER
#                        valueFrom:
#                          secretKeyRef:
#                            name: postgres-secret
#                            key: USERNAME
#                      - name: DB_PASS
#                      valueFrom:
#                        secretKeyRef:
#                          name: postgres-secret
#                          key: PASSWORD
#        
  - step: automatically-detect-readiness
    functionRef:
      name: function-auto-ready
